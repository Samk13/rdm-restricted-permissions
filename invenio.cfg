"""
InvenioRDM settings for kth-rdm-v12 project.

This file was automatically generated by 'invenio-cli init'.

For the full list of settings and their values, see
https://inveniordm.docs.cern.ch/reference/configuration/.
"""

import os
from datetime import datetime, timedelta
from invenio_i18n import lazy_gettext as _
from invenio_oauthclient.contrib import orcid
from invenio_oauthclient.views.client import auto_redirect_login
from dotenv import load_dotenv

# make sure that the dotenv is really loaded
load_dotenv()

def _(x):  # needed to avoid start time failure with lazy strings
    return x

# Flask
# =====
# See https://flask.palletsprojects.com/en/1.1.x/config/

# Define the value of the cache control header `max-age` returned by the server when serving
# public files. Files will be cached by the browser for the provided number of seconds.
# See flask documentation for more information:
# https://flask.palletsprojects.com/en/2.1.x/config/#SEND_FILE_MAX_AGE_DEFAULT
SEND_FILE_MAX_AGE_DEFAULT = 300

# SECURITY WARNING: keep the secret key used in production secret!
# Do not commit it to a source code repository.
SECRET_KEY=os.environ.get("SECRET_KEY")

# SALTS
CSRF_SECRET_SALT=str(os.environ.get("INVENIO_CSRF_SECRET_SALT"))
SECURITY_RESET_SALT=str(os.environ.get("INVENIO_SECURITY_RESET_SALT"))
SECURITY_LOGIN_SALT=str(os.environ.get("INVENIO_SECURITY_LOGIN_SALT"))
SECURITY_PASSWORD_SALT=str(os.environ.get("INVENIO_SECURITY_PASSWORD_SALT"))
SECURITY_CONFIRM_SALT=str(os.environ.get("INVENIO_SECURITY_CONFIRM_SALT"))
SECURITY_CHANGE_SALT=str(os.environ.get("INVENIO_SECURITY_CHANGE_SALT"))
SECURITY_REMEMBER_SALT=str(os.environ.get("INVENIO_SECURITY_REMEMBER_SALT"))

# TODO V11_test
# PERMANENT_SESSION_LIFETIME = timedelta(days=31)

# Since HAProxy and Nginx route all requests no matter the host header
# provided, the allowed hosts variable is set to localhost. In production it
# should be set to the correct host and it is strongly recommended to only
# route correct hosts to the application.
APP_ALLOWED_HOSTS = ['0.0.0.0', 'localhost', '127.0.0.1']


# Flask-SQLAlchemy
# ================
# See https://flask-sqlalchemy.palletsprojects.com/en/2.x/config/

engine = str(os.environ.get("DB_ENGINE"))
db_user = str(os.environ.get("INVENIO_DATABASE_ROOT_USER"))
db_pass = str(os.environ.get("INVENIO_DATABASE_ROOT_PASSWORD"))
db_host = str(os.environ.get("DB_HOST"))
db_port = str(os.environ.get("DB_PORT"))
db_name = str(os.environ.get("INVENIO_DATABASE_DB"))
SQLALCHEMY_DATABASE_URI=f"{engine}://{db_user}:{db_pass}@{db_host}:{db_port}/{db_name}"


# Invenio-App
# ===========
# See https://invenio-app.readthedocs.io/en/latest/configuration.html

APP_DEFAULT_SECURE_HEADERS = {
    'content_security_policy': {
        'default-src': [
            "'self'",
            'data:', # for fonts
            "'unsafe-inline'",  # for inline scripts and styles
            "blob:",            # for pdf preview
            # Add your own policies here (e.g. analytics)
        ],
    },
    'content_security_policy_report_only': False,
    'content_security_policy_report_uri': None,
    'force_file_save': False,
    'force_https': True,
    'force_https_permanent': False,
    'frame_options': 'sameorigin',
    'frame_options_allow_from': None,
    'session_cookie_http_only': True,
    'session_cookie_secure': True,
    'strict_transport_security': True,
    'strict_transport_security_include_subdomains': True,
    'strict_transport_security_max_age': 31556926,  # One year in seconds
    'strict_transport_security_preload': False,
}


# Flask-Babel
# ===========
# See https://python-babel.github.io/flask-babel/#configuration

# Default locale (language)
BABEL_DEFAULT_LOCALE = 'en'
# Default time zone
BABEL_DEFAULT_TIMEZONE = 'Europe/Stockholm'


# Invenio-I18N
# ============
# See https://invenio-i18n.readthedocs.io/en/latest/configuration.html

# Other supported languages (do not include BABEL_DEFAULT_LOCALE in list).
I18N_LANGUAGES = [
    # ('de', _('German')),
    ('sv', _('Swedish')),
]


# Invenio-Theme
# =============
# See https://invenio-theme.readthedocs.io/en/latest/configuration.html

# Frontpage title
THEME_FRONTPAGE_TITLE = str(_("Welcome to KTH data repo! ðŸ¦„"))
# Header logo
THEME_LOGO = 'images/invenio-rdm.svg'


# Invenio-App-RDM
# ===============
# See https://invenio-app-rdm.readthedocs.io/en/latest/configuration.html

# Instance's theme entrypoint file. Path relative to the ``assets/`` folder.
INSTANCE_THEME_FILE = './less/theme.less'


# Invenio-Records-Resources
# =========================
# See https://github.com/inveniosoftware/invenio-records-resources/blob/master/invenio_records_resources/config.py

# TODO: Set with your own hostname when deploying to production
SITE_UI_URL = "https://127.0.0.1"

SITE_API_URL = "https://127.0.0.1/api"

APP_RDM_DEPOSIT_FORM_DEFAULTS = {
    "publication_date": lambda: datetime.now().strftime("%Y-%m-%d"),
    "rights": [
        {
            "id": "cc-by-4.0",
            "title": "Creative Commons Attribution 4.0 International",
            "description": ("The Creative Commons Attribution license allows "
                            "re-distribution and re-use of a licensed work "
                            "on the condition that the creator is "
                            "appropriately credited."),
            "link": "https://creativecommons.org/licenses/by/4.0/legalcode",
        }
    ],
    "publisher": "KTH-RDM",
}

# See https://github.com/inveniosoftware/invenio-app-rdm/blob/master/invenio_app_rdm/config.py
APP_RDM_DEPOSIT_FORM_AUTOCOMPLETE_NAMES = 'search' # "search_only" or "off"

# Invenio-RDM-Records
# ===================
# See https://inveniordm.docs.cern.ch/customize/dois/
DATACITE_ENABLED = False
DATACITE_USERNAME = ""
DATACITE_PASSWORD = ""
DATACITE_PREFIX = ""
DATACITE_TEST_MODE = True
DATACITE_DATACENTER_SYMBOL = ""

# Authentication - Invenio-Accounts and Invenio-OAuthclient
# =========================================================
# See: https://inveniordm.docs.cern.ch/customize/authentication/

# Invenio-Accounts
# ----------------
# See https://github.com/inveniosoftware/invenio-accounts/blob/master/invenio_accounts/config.py
ACCOUNTS_LOCAL_LOGIN_ENABLED = True  # enable local login
SECURITY_REGISTERABLE = True  # local login: allow users to register
SECURITY_RECOVERABLE = True  # local login: allow users to reset the password
SECURITY_CHANGEABLE = True  # local login: allow users to change psw
SECURITY_CONFIRMABLE = True  # local login: users can confirm e-mail address
# TODO turn it to False on prod
SECURITY_LOGIN_WITHOUT_CONFIRMATION = True # require users to confirm email before being able to login

# Invenio-OAuthclient
# -------------------
# See https://github.com/inveniosoftware/invenio-oauthclient/blob/master/invenio_oauthclient/config.py

OAUTHCLIENT_REMOTE_APPS = {}  # configure external login providers

from invenio_oauthclient.views.client import auto_redirect_login
ACCOUNTS_LOGIN_VIEW_FUNCTION = auto_redirect_login  # autoredirect to external login if enabled
OAUTHCLIENT_AUTO_REDIRECT_TO_EXTERNAL_LOGIN = False  # autoredirect to external login

# Invenio-UserProfiles
# --------------------
USERPROFILES_READ_ONLY = False  # allow users to change profile info (name, email, etc...)

# OAI-PMH
# =======
# See https://github.com/inveniosoftware/invenio-oaiserver/blob/master/invenio_oaiserver/config.py

OAISERVER_ID_PREFIX = "kth-rdm-v12.com"
"""The prefix that will be applied to the generated OAI-PMH ids."""

# Invenio-Search
# --------------

SEARCH_INDEX_PREFIX = "kth-rdm-"


# Sending email setup
# ===================
# TODO reactivate Email functionality when prod is ready
# SECURITY_EMAIL_SENDER = "noreply-rdm@kth.se"
# """ Email address used as sender of account registration emails.
#      Domain name should match the domain used in web server.
#  """
# SECURITY_EMAIL_SUBJECT_REGISTER = "Welcome to KTH RDM!"
#  """Email subject for account registration emails."""
# MAIL_SERVER = "smtp.sys.kth.se"
# MAIL_PORT = 465

# MAIL_SUPPRESS_SEND = True
#  """Enable email sending by default.
#  Set this to False when sending actual emails.
#  """

# uncomment tese on prod
# MAIL_USERNAME = os.environ.get("MAIL_USERNAME")
# MAIL_PASSWORD = os.environ.get("MAIL_PASSWORD")
# MAIL_USE_SSL = True


# KTH custom config
# =================

ACCOUNTS_DEFAULT_USER_VISIBILITY = "public"
"""Set users visiblity to public"""

# see https://inveniordm.docs.cern.ch/releases/versions/version-v11.0.0/#featured-communities
# This option is temporary, and it will be removed in future version (after v11)
COMMUNITIES_ADMINISTRATION_DISABLED = False
"""Manage featured communities from the administration panel"""

# Check files integrity
# =====================

# https://inveniordm.docs.cern.ch/releases/versions/version-v11.0.0/#reports
INVENIO_MAIL_DEFAULT_SENDER = "kth-rdm-system-report@kth.se"
INVENIO_APP_RDM_ADMIN_EMAIL_RECIPIENT = "kth-rdm-system-report@kth.se"
INVENIO_FILES_INTEGRITY_REPORT_SUBJECT = "KTH RDM Files integrity report"


# Add terms agreement to submit modal
# ===================================

from kth_rdm_v12.authentication.registration_form import kth_registration_form

APP_RDM_DEPOSIT_FORM_PUBLISH_MODAL_EXTRA = _("<div class='column'><p>By submitting records to our community, you hereby acknowledge and agree to be bound by the <a href='/terms-en' target='_blank'>terms and conditions of service</a> as set forth by KTH Royal Institute of Technology.</p></div>")
"""Additional text/html to be displayed in the publish and submit for review modal."""

OAUTHCLIENT_SIGNUP_FORM = kth_registration_form
"""user registration terms of use checkbox."""


# Authentication
# AZURE KTH SSO Authentication
# ============================

from kth_rdm_v12.authentication.kth_sso_auth import AzureOAuthSettingsHelper
AzureOAuthHelper = AzureOAuthSettingsHelper()
AZURE_APP_CREDENTIALS = dict(
    consumer_key=os.environ.get("AZURE_CONSUMER_KEY"),
    consumer_secret=os.environ.get("AZURE_CONSUMER_SECRET"),
)


# Setup ORCID Authentication
# ==========================

ORCID_APP_CREDENTIALS = dict(
    consumer_key=os.environ.get("ORCID_CONSUMER_KEY"),
    consumer_secret=os.environ.get("ORCID_CONSUMER_SECRET")
)

# configure external login providers
OAUTHCLIENT_REMOTE_APPS = dict(
    azure=AzureOAuthHelper.remote_app,
    orcid=orcid.REMOTE_APP,
)

# KTH Invenio config
# =================

from kth_rdm_v12.permissions import KTHRecordPermissionPolicy, KTHCommunitiesPermissionPolicy

# Invenio-Communities
# ================
# Communities permission policy
# Will work on v12 and above
# Don't use it on v11,
# use the package https://pypi.org/project/invenio-config-kth/  instead.
COMMUNITIES_PERMISSION_POLICY = KTHCommunitiesPermissionPolicy

# Invenio-Records
# ================
CONFIG_KTH_COMMUNITY_MANAGER_ROLE = "kth-community-manager"
RDM_PERMISSION_POLICY = KTHRecordPermissionPolicy


# Terms of use text see: "site/kth_rdm_v12/authentication/registration_form.py"
# =================

TERMS_OF_USE_TEXT = "I confirm that I have read and fully understand the \
<a class='pull-right' href='/terms-en' target='_blank'>terms and conditions</a> \
of KTH Royal Institute of Technology."
"""Signup terms and agreement Checkbox label text"""

# TODO When making opensearch use ssl
# SEARCH_HOSTS  = [
#     {
#         "host": "127.0.0.1",
#         "port": 9200,
#         "http_auth": ("kibanaserver", "kibanaserver"),
#     }
# ]

# INVENIO_SEARCH_CLIENT_CONFIG={'hosts': [{'host': '127.0.0.1', 'port': 9200}], 'http_auth': ('admin', 'password'), 'http_compress': True, 'use_ssl': True, 'verify_certs': False, 'ssl_assert_hostname': False, 'ssl_show_warn': True}